#include<stdio.h>
//普通自增输出
int main(){
	int b=1;
//	printf("%d %d",b++,++b); //2 3 
//	printf("%d %d",++b,b++);//3 1
//	printf("%d %d",++b,++b);//3 3
//	printf("%d %d",b++,b++);//2 1
//   	printf("%d %d %d",b++,++b,++b); 
//	printf("%d %d %d",b++,++b,b++); 
//  	printf("%d %d %d %d",++b,++b,b++,b++); 
	printf("%d %d %d %d",++b,b++,++b,b++); 
	} 
//猜测运行规则：
/*
printf先执行最后一条语句 
若第二条语句是b++则先输出再执行
若第二条语句是++b则先执行，而等到第一条语句输出完后再输出第二条语句（此时不执行） 
猜想实验：printf("%d %d %d",b++,++b,++b) 
猜测结果：2 4 4 
但实际上是：3 4 4
实验结果说明了不是先执行最后一条再执行第一句而是执行了两次++b,再执行第一句
由此继续猜测，printf从右往左执行语句，再从左往右输出语句，被执行过的语句直接输出
猜想实验：printf("%d %d %d",b++,++b,b++)
猜测结果：3 4 1
与实验结果相符
我们再次猜想实验：printf("%d %d %d %d",++b,++b,b++,b++) 
猜测结果：5 5 2 1 
相符 
再次猜想实验：printf("%d %d %d %d",++b,b++,++b,b++) 
猜测结果：5 3 5 1 
相符
由此我们总结一下：
printf里面的机制就是先从右往左执行，若是遇到先输出再执行的便先输出，然后继续往左执行到底，再从左往右输出
最后的最后，一个小彩蛋
#include<stdio.h>
int main(){	
	char b=85;
	char a=69;
	char d=(b-a)*2-1;
	printf("%c%c%c%c%c%c%c%c\t",a-3,d++,a+=6,a+9,b,a++,++d,b++);	
}
*/ 
